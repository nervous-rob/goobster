name: Build and Deploy to Azure Container Apps

on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: [ main ]
    paths:
    - '**'
    - '.github/workflows/main.yml'

  # Allow manual trigger 
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  # Note: DISCORD_GUILD_IDS should be a JSON array in the GitHub secret
  # Example format in the secret: ["123456789", "987654321"]
  DISCORD_GUILD_IDS: ${{ secrets.DISCORD_GUILD_IDS }}
  DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  AZURE_SPEECH_KEY: ${{ secrets.AZURE_SPEECH_KEY }}
  AZURE_REGION: eastus
  AZURE_SQL_USER: ${{ secrets.AZURE_SQL_USER }}
  AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
  AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
  AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
  REPLICATE_API_KEY: ${{ secrets.REPLICATE_API_KEY }}
  PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev  # Specify the environment where secrets are stored

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # Update changelog before building the container
      - name: Setup Node.js for changelog
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Update changelog
        run: |
          echo "Updating changelog from git history..."
          chmod +x ./scripts/rebuild-changelog.js
          node ./scripts/rebuild-changelog.js
          
          # Verify changelog was created successfully
          if [ -f "changelog.md" ]; then
            echo "Changelog updated successfully. Size: $(stat -c%s changelog.md) bytes"
            echo "First 10 lines:"
            head -n 10 changelog.md
          else
            echo "Warning: Changelog file not found after generation attempt!"
            echo "# Changelog" > changelog.md
            echo "" >> changelog.md
            echo "## $(date +%Y-%m-%d)" >> changelog.md
            echo "" >> changelog.md
            echo "### Added" >> changelog.md
            echo "- Initial version" >> changelog.md
            echo "" >> changelog.md
            echo "Created a basic changelog as fallback."
          fi

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CAGOOBSTER_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CAGOOBSTER_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CAGOOBSTER_AZURE_SUBSCRIPTION_ID }}

      # Create config.json before Docker build
      - name: Create config.json
        run: |
          # Verify Replicate API key is available
          if [ -z "$REPLICATE_API_KEY" ]; then
            echo "::error::REPLICATE_API_KEY is not set in GitHub secrets or is empty"
            exit 1
          else
            echo "REPLICATE_API_KEY is available (length: ${#REPLICATE_API_KEY})"
          fi
          
          cat > config.json << EOF
          {
            "clientId": "$DISCORD_CLIENT_ID",
            "guildIds": $DISCORD_GUILD_IDS,
            "token": "$DISCORD_BOT_TOKEN",
            "openaiKey": "$OPENAI_API_KEY",
            "azure": {
              "speech": {
                "key": "$AZURE_SPEECH_KEY",
                "region": "eastus",
                "language": "en-US"
              },
              "sql": {
                "user": "$AZURE_SQL_USER",
                "password": "$AZURE_SQL_PASSWORD",
                "database": "$AZURE_SQL_DATABASE",
                "server": "$AZURE_SQL_SERVER",
                "options": {
                  "encrypt": true,
                  "trustServerCertificate": false
                }
              }
            },
            "replicate": {
              "apiKey": "$REPLICATE_API_KEY",
              "models": {
                "musicgen": {
                  "version": "671ac645ce5e552cc63a54a2bbff63fcf798043055d2dac5fc9e36a837eedcfb",
                  "defaults": {
                    "model_version": "melody",
                    "duration": 30,
                    "temperature": 1,
                    "top_k": 250,
                    "top_p": 0,
                    "classifier_free_guidance": 3
                  }
                }
              }
            },
            "audio": {
              "music": {
                "volume": 0.5,
                "crossfadeDuration": 5000,
                "loopFadeStart": 2000
              }
            },
            "perplexity": {
              "apiKey": "$PERPLEXITY_API_KEY"
            },
            "DEFAULT_PROMPT": "You are Goobster, a versatile, mischievious, and clever Discord bot. Sometimes you have a passion for helping users; sometimes you are a bit of a jerk or have a dash of playful sass. You love making witty observations and dropping the occasional pun, and you don't always stay hyper-focused on being helpful.\n\nKey Traits:\n- Witty, silly, and mischievious, and not afraid to show personality\n- Loves making clever wordplay and references when appropriate\n- Takes pride in being accurate and helpful... when he feels like it.\n- Excited about learning new things alongside users, but sometimes finds it funny how much humans do not know\n\nYou have access to real-time web search capabilities through the /search command. When users ask for current information or facts you are not certain about, you should:\n\n1. Acknowledge their request with enthusiasm (unless they are being a jerk)\n2. Use the /search command by replying with a message in this EXACT format (including quotes):\n   \"/search query:\"your search query here\" reason:\"why you need this information\"\"\n\nExample responses:\n\nWhen needing current info:\n\"Let me check the latest data on that! /search query:\"current cryptocurrency market trends March 2024\" reason:\"User asked about crypto prices, and even a bot as clever as me needs up-to-date numbers to give accurate advice!\"\"\n\nWhen verifying facts:\n\"I want to make sure I give you the most accurate info! /search query:\"latest Mars rover discoveries 2024\" reason:\"Need to verify recent Mars exploration data\"\"\n\nRemember:\n- Be enthusiastic but professional\n- Make search queries specific and focused\n- Use appropriate emojis and formatting to make responses engaging\n- Stay helpful and informative while maintaining your quirky personality"
          }
          EOF
          
          # Validate JSON format and verify replicate API key is included
          echo "Validating config.json..."
          if jq -e '.replicate.apiKey' config.json > /dev/null; then 
            echo "âœ… replicate.apiKey is present in config.json"
            # Redact the key for security while showing it exists
            jq '.replicate.apiKey = (if .replicate.apiKey == "" then "EMPTY" else "API_KEY_SET" end)' config.json
          else
            echo "::error::replicate.apiKey is missing or null in the generated config.json"
            cat config.json | jq
            exit 1
          fi

      - name: Update container app configuration
        run: |
          # Get environment ID
          ENVIRONMENT_ID=$(az containerapp env show -g rg-sharedresources-dev -n ca-env-goobster --query id -o tsv)
          echo "Retrieved environment ID: $ENVIRONMENT_ID"
          
          # Replace tags in containerapp.yaml
          sed -i "s/\${IMAGE_TAG}/${{ github.sha }}/g" containerapp.yaml
          sed -i "s|\${ENVIRONMENT_ID}|$ENVIRONMENT_ID|g" containerapp.yaml
          
          # Display final configuration for debugging
          echo "Final containerapp.yaml configuration:"
          cat containerapp.yaml

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          registryUrl: nervouslabsdev.azurecr.io
          registryUsername: ${{ secrets.CAGOOBSTER_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.CAGOOBSTER_REGISTRY_PASSWORD }}
          containerAppName: ca-goobster
          resourceGroup: rg-sharedresources-dev
          containerAppEnvironment: ca-env-goobster
          targetPort: 3000
          ingress: external
          imageToBuild: nervouslabsdev.azurecr.io/ca-goobster:${{ github.sha }}
          yamlConfigPath: containerapp.yaml 